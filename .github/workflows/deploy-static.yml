name: Deploy static site to Yandex Object Storage

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      target:
        description: "Куда деплоим?"
        type: choice
        required: true
        options: [ "prod", "wip" ]
        default: "wip"

jobs:
  deploy:
    runs-on: ubuntu-latest
<<<<<<< Updated upstream
    env:
      AWS_DEFAULT_REGION: ru-central1
<<<<<<< Updated upstream
      AWS_ENDPOINT_URL: https://storage.yandexcloud.net
      S3_BUCKET: ${{ vars.S3_BUCKET }}
=======
>>>>>>> Stashed changes
    steps:
      - uses: actions/checkout@v4

      - name: Generate build.js
        run: |
          mkdir -p general_preview
          SHORT=$(echo "$GITHUB_SHA" | cut -c1-7)
          TS=$(date -u +%Y-%m-%dT%H:%M:%SZ)
          cat > general_preview/build.js <<EOF
          // auto-generated by CI
          window.__BUILD__ = {
            sha: "$GITHUB_SHA",
            short: "$SHORT",
            run: "$GITHUB_RUN_NUMBER",
            ts: "$TS",
            branch: "$GITHUB_REF_NAME",
            repo: "$GITHUB_REPOSITORY"
          };
          EOF

<<<<<<< Updated upstream
      # 2) Выбираем префикс: корень для main, /wip/ для wip
      - name: Decide deploy prefix (root for main, /wip/ for wip)
        id: path
        run: |
          if [ "${{ github.ref_name }}" = "main" ]; then
            echo "prefix=" >> $GITHUB_OUTPUT
          else
            echo "prefix=wip/" >> $GITHUB_OUTPUT
          fi
          echo "Deploying to s3://${{ env.S3_BUCKET }}/${{ steps.path.outputs.prefix }}"

      # 3) Заливаем всё, кроме index.html и build.js (их положим отдельно без кэша)
      - name: Upload assets (exclude index.html & build.js)
=======
      S3_ENDPOINT: https://storage.yandexcloud.net
      S3_BUCKET: ${{ vars.S3_BUCKET }}   # имя бакета из Variables
      # вычисляем префикс
      PREFIX: ${{ github.ref_name == 'main' && '' || (github.ref_name == 'wip' && 'wip/' || '') }}
    steps:
      - uses: actions/checkout@v4

      # Согласовываем manual target с веткой (fail-fast, если не совпало)
      - name: Validate manual target (only on dispatch)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          target='${{ inputs.target }}'
          ref='${{ github.ref_name }}'
          if [ "$target" = "prod" ] && [ "$ref" != "main" ]; then
            echo "::error ::Manual target=prod, но ветка не main"; exit 1
          fi
          if [ "$target" = "wip" ] && [ "$ref" = "main" ]; then
            echo "::error ::Manual target=wip, но ветка main"; exit 1
          fi

      - name: Build (генерация build.js и т.п.)
        run: |
          # ваш билд тут
          echo "build..."

      - name: Sync static
>>>>>>> Stashed changes
=======
      - name: Sync to Object Storage
>>>>>>> Stashed changes
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ru-central1
        run: |
<<<<<<< Updated upstream
<<<<<<< Updated upstream
          aws s3 sync ./general_preview "s3://${S3_BUCKET}/${{ steps.path.outputs.prefix }}"             --endpoint-url "$AWS_ENDPOINT_URL"             --delete             --exclude "index.html"             --exclude "build.js"             --cache-control "public,max-age=31536000,immutable"
=======
          DEST="s3://${S3_BUCKET}/${PREFIX}"
          echo "Sync to $DEST"
          aws s3 sync ./general_preview "$DEST" \
            --delete --acl public-read --endpoint-url "${S3_ENDPOINT}"
>>>>>>> Stashed changes
=======
          aws s3 sync ./general_preview s3://${{ vars.S3_BUCKET }}             --delete --acl public-read             --endpoint-url https://storage.yandexcloud.net
>>>>>>> Stashed changes

      - name: Set no-cache for build.js
        if: always()
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ru-central1
        run: |
<<<<<<< Updated upstream
<<<<<<< Updated upstream
          aws s3 cp ./general_preview/build.js "s3://${S3_BUCKET}/${{ steps.path.outputs.prefix }}build.js"             --endpoint-url "$AWS_ENDPOINT_URL"             --cache-control "no-store"             --content-type "application/javascript"             --metadata-directive REPLACE

      # 5) Кладём index.html без кэша и ПОСЛЕДНИМ
      - name: Upload index.html (no cache, last)
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
        run: |
          if [ -f ./general_preview/index.html ]; then
            aws s3 cp ./general_preview/index.html "s3://${S3_BUCKET}/${{ steps.path.outputs.prefix }}index.html"               --endpoint-url "$AWS_ENDPOINT_URL"               --cache-control "no-store"               --content-type "text/html"               --metadata-directive REPLACE
          fi
=======
          DEST="s3://${S3_BUCKET}/${PREFIX}build.js"
          aws s3 cp general_preview/build.js "$DEST" \
            --cache-control "max-age=0" --metadata-directive REPLACE \
            --acl public-read --endpoint-url "${S3_ENDPOINT}"
>>>>>>> Stashed changes
=======
          aws s3 cp general_preview/build.js s3://${{ vars.S3_BUCKET }}/build.js             --acl public-read             --cache-control "no-cache, max-age=0"             --endpoint-url https://storage.yandexcloud.net
>>>>>>> Stashed changes
